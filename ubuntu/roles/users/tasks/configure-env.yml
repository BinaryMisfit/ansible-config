---
  - include_tasks: sudo-nopasswd.yml
    vars:
      user_for_sudo: "{{ user_to_configure }}"
  - name: "{{ user_to_configure }}: Get user info"
    ansible.builtin.user:
      name: "{{ user_to_configure }}"
      state: present
    register: user_data
  - name: "{{ user_to_configure }}: Update shell to ZSH"
    ansible.builtin.user:
      name: "{{ user_to_configure }}"
      shell: /usr/bin/zsh
  - name: "{{ user_to_configure }}: Install dotfiles"
    become_user: "{{ user_to_configure }}"
    become: true
    ansible.builtin.git:
      repo: https://github.com/BinaryMisfit/dot-files-ubuntu
      dest: "{{ user_data.home }}/.dotfiles"
      update: true
      recursive: true
      version: active
  - name: "{{ user_to_configure }}: Check npmrc"
    become_user: "{{ user_to_configure }}"
    become: true
    ansible.builtin.file:
      path: "{{ user_data.home }}/.npmrc"
      mode: 0600
      group: "{{ user_to_configure }}"
      owner: "{{ user_to_configure }}"
      state: touch
      modification_time: preserve
      access_time: preserve
  - name: "{{ user_to_configure }}: Set npm configuration"
    become_user: "{{ user_to_configure }}"
    become: true
    ansible.builtin.lineinfile:
      dest: "{{ user_data.home }}/.npmrc"
      regexp: "%prefix"
      line: "prefix={{ user_data.home }}/.npm_packages"
      state: present
  - name: "{{ user_to_configure }}: Install node packages"
    become_user: "{{ user_to_configure }}"
    become: true
    community.general.npm:
      name: "{{ node_item }}"
      global: true
    loop_control:
      loop_var: node_item
    with_items:
      - neovim
  - name: "{{ user_to_configure }}: Install python packages"
    become_user: "{{ user_to_configure }}"
    become: true
    ansible.builtin.pip:
      name: "{{ pip_item }}"
    loop_control:
      loop_var: pip_item
    with_items:
      - pynvim
